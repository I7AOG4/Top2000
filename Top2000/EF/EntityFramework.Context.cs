//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Top2000.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Top2000Entities : DbContext
    {
        public Top2000Entities()
            : base("name=Top2000Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblArtist> tblArtist { get; set; }
        public virtual DbSet<tblRanking> tblRanking { get; set; }
        public virtual DbSet<tblSongs> tblSongs { get; set; }
    
        public virtual ObjectResult<spSongList_Result> spSongList(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSongList_Result>("spSongList", yearParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spYears()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spYears");
        }
    
        public virtual ObjectResult<spArtistGemiddelde_Result> spArtistGemiddelde(string artistname)
        {
            var artistnameParameter = artistname != null ?
                new ObjectParameter("artistname", artistname) :
                new ObjectParameter("artistname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spArtistGemiddelde_Result>("spArtistGemiddelde", artistnameParameter);
        }
    
        public virtual ObjectResult<spArtistRanking_Result> spArtistRanking(string artistname)
        {
            var artistnameParameter = artistname != null ?
                new ObjectParameter("artistname", artistname) :
                new ObjectParameter("artistname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spArtistRanking_Result>("spArtistRanking", artistnameParameter);
        }
    
        public virtual ObjectResult<spYearRanking_Result> spYearRanking(string songname, Nullable<int> rankingYear)
        {
            var songnameParameter = songname != null ?
                new ObjectParameter("Songname", songname) :
                new ObjectParameter("Songname", typeof(string));
    
            var rankingYearParameter = rankingYear.HasValue ?
                new ObjectParameter("RankingYear", rankingYear) :
                new ObjectParameter("RankingYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spYearRanking_Result>("spYearRanking", songnameParameter, rankingYearParameter);
        }
    
        public virtual ObjectResult<string> spAllArtist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spAllArtist");
        }
    }
}
